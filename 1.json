[ {
    "id": 1,
    "background": "https://www.simplilearn.com/ice9/free_resources_article_thumb/X_Reasons_to_learn_Javascript.jpg",
    "body": "JavaScript is a programming language that started off simply as a mechanism to add logic and interactivity to an otherwise static Netscape browser. In the years since its introduction, it has not only supplanted a variety of other competing languages and technologies to become the standard for browser-based programming, but it has also expanded beyond the client space to become a dominant language on the server side, as well.\nThe Hyper Text Transport Protocol, or HTTP, was designed to do exactly what the name implies, which is to transport HTML text across a network for viewing. But the problem with HTML is that it is completely static, providing no capabilities to implement logic.\nBasic features we currently take for granted, such as input validation, autocorrect, progress bars or causing a graphic to change during a mouse rollover, would all be impossible for a browser to perform without some type of scripting capability. As a result, when the web first rose to prominence, every vendor in that space provided some mechanism to make HTML web pages more interactive.\nMicrosoft promoted a competitor to JavaScript named VBScript, along with plug-in technologies, such as ActiveX Data Object (ADO). Sun Microsystems promoted Java applets that were cross-platform and could be used in any browser.\nMany other technologies came and went as the internet matured. In the end, JavaScript won the battle for popularity, and it is the only client-side scripting technology supported by the Chrome, Firefox, Safari and Internet Explorer browsers.\nJavaScript is an interpreted language, as opposed to compiled languages, such as C++ and Java. This means that the code written in JavaScript does not go through an intermediary compilation stage in which the source code is transformed into machine language that is easy for a CPU to process.\nInstead, JavaScript is interpreted on the fly by the computer processing it. Because JavaScript code is not packaged in a CPU-friendly form, such as Java bytecode or a binary executable, program execution can be slower than a comparable program written in Scala or F#. However, modern JavaScript engines are highly optimized, and inefficiencies are rarely noticeable when using modern hardware.",
        "title": "Javascript",
    "subtitle": "JavaScript is a high-level programming language that is one of the core technologies of the World Wide Web. It is used as a client-side programming language by 97.8 percent of all websites. JavaScript was originally used only to develop web browsers, but they are now used for server-side website deployments and non-web browser applications as well. "
      },

  {
    "id": 2,
    "background": "https://i.redd.it/v7g6ime1wtk61.jpg",
    "body": "Python is the gift that keeps on giving. The more you understand Python, the more you can do in the 21st Century. As simple as that.\n\nPython is a widely-used, interpreted, object-oriented, and high-level programming language with dynamic semantics, used for general-purpose programming. It’s everywhere, and people use numerous Python-powered devices on a daily basis, whether they realize it or not.\n\nPython was created by Guido van Rossum, and first released on February 20, 1991. While you may know the python as a large snake, the name of the Python programming language comes from an old BBC television comedy sketch series called Monty Python’s Flying Circus.\nOne of the amazing features of Python is the fact that it is actually one person’s work. Usually, new programming languages are developed and published by large companies employing lots of professionals, and due to copyright rules, it is very hard to name any of the people involved in the project. Python is an exception.\nOf course, Guido van Rossum did not develop and evolve all the Python components himself. The speed with which Python has spread around the world is a result of the continuous work of thousands (very often anonymous) programmers, testers, users (many of them aren’t IT specialists) and enthusiasts, but it must be said that the very first idea (the seed from which Python sprouted) came to one head – Guido’s. Python is maintained by the Python Software Foundation, a non-profit membership organization and a community devoted to developing, improving, expanding, and popularizing the Python language and its environment.\n\nPython is omnipresent, and people use numerous Python-powered devices on a daily basis, whether they realize it or not. There are billions of lines of code written in Python, which means almost unlimited opportunities for code reuse and learning from well-crafted examples. What’s more, there is a large and very active Python community, always happy to help. There are also a couple of factors that make Python great for learning: \nIt is easy to learn – the time needed to learn Python is shorter than for many other languages; this means that it’s possible to start the actual programming faster;\nIt is easy to use for writing new software – it’s often possible to write code faster when using Python;\nIt is easy to obtain, install and deploy – Python is free, open and multiplatform; not all languages can boast that.\nProgramming skills prepare you for careers in almost any industry, and are required if you want to continue to more advanced and higher-paying software development and engineering roles. Python is the programming language that opens more doors than any other. With a solid knowledge of Python, you can work in a multitude of jobs and a multitude of industries. And the more you understand Python, the more you can do in the 21st Century. Even if you don’t need it for work, you will find it useful to know.\nPython is the programming language that opens more doors than any other. With a solid knowledge of Python, you can work in a multitude of jobs and a multitude of industries. And even if you don’t need it for work, you will still find it useful to know to speed certain things up or develop a deeper understanding of other concepts. Python is a great choice for career paths related to software development, engineering, DevOps, machine learning, data analytics, web development, and testing. What's more, there are also many jobs outside the IT industry that use Python. Since our lives are becoming more computerized every day, and the computer and technology areas previously associated only with technically gifted people are now opening up to non-programmers, Python has become one of the must-have tools in the toolbox of educators, managers, data scientists, data analysts, economists, psychologists, artists, and even secretaries. ",
    "title": "Python",
    "subtitle": "Python is one of the most popular programming languages today and is easy for beginners to learn because of its readability. It is a free, open-source programming language with extensive support modules and community development, easy integration with web services, user-friendly data structures, and GUI-based desktop applications. It is a popular programming language for machine learning and deep learning applications. "
  },
  {
    "id": 3,
    "background": "https://i.morioh.com/200725/e889fd61.webp",
    "body": "Go is an open-source programming language focused on simplicity, reliability, and efficiency.\nGo was originally designed at Google in 2007. At the time, Google was growing quickly, and code being used to manage their infrastructure was also growing quickly in both size and complexity. Some Google cloud engineers began to feel that this large and complex codebase was slowing them down. So they decided that they needed a new programming language focused on simplicity and quick performance. Robert Griesemer, Rob Pike, and Ken Thompson designed Go.\nGo became an open-source project and was released publicly in 2012. It quickly gained a surprising level of popularity and has become one of the leading modern programming languages.\n\nIs the language called Go or Golang? Take it straight from the horse’s Google’s mouth here: the language is called 'Go.'\nGoogle says the 'Golang' moniker came about due to the website, golang.org, which was selected because 'go.org was not available to us.' As a result, some people use the 'Golang' interchangeably with 'Go' when referring to the programming language. In fairness though, Golang is much more Google-able than Go, which could refer to the strategy game or the cult-classic Doug Liman movie. Golang is also used as the Twitter tag for Go, #golang.\n\nGo was originally built for programs related to networking and infrastructure. It was intended to replace popular high-performance server-side languages like Java and C++. Today, Go is used for a variety of applications:\n-Go is popular for cloud-based or server-side applications.\n-DevOps and site reliability automation are also popular ways to use Go.\n-Many command-line tools are written in Go.\n-Go is used in the world of artificial intelligence and data science.\n-Some use Go from micro-controller programming, robotics, and games.\n-However, Go really shines the most when it comes to infrastructure. Some of the most popular infrastructure tools today are written in Go — such as Kubernetes, Docker, and Prometheus.\n\nAccording to the 2020 Stack Overflow Developer Survey, Go is one of the most loved languages by developers who use it. Go’s own 2020 developer survey seems to agree, with a 92% satisfaction rating by Go users.\n\nPython is more than 30 years old, but it continues to grow in popularity. The design of the language has stood the test of time (despite some rough spots along the way). Today, Python and Go are two of the most popular and convenient-to-use programming languages out there.\nPython is a great object-oriented language, but you can also write programs in a functional programming style too. Of all the programming languages, you probably won’t find one used by more non-programmers than Python. Its flexibility is one of the reasons Python is so popular. It can be used for everything from cleaning up files on your computers to web applications, serverless projects, teaching programming to kids, working on animation, and more. ",
    "title": "Go",
    "subtitle": "Go was developed by Google in 2007 for APIs and web applications. Go has recently become one of the fastest-growing programming languages due to its simplicity, as well as its ability to handle multicore and networked systems and massive codebases."

  },
  {
    "id": 4,
    "background": "https://i.morioh.com/200709/b21e399a.jpg",
    "body": "JAVA was developed by James Gosling at Sun Microsystems Inc in the year 1995, later acquired by Oracle Corporation. It is a simple programming language. Java makes writing, compiling, and debugging programming easy. It helps to create reusable code and modular programs. Java is a class-based, object-oriented programming language and is designed to have as few implementation dependencies as possible. A general-purpose programming language made for developers to write once run anywhere that is compiled Java code can run on all platforms that support Java. Java applications are compiled to byte code that can run on any Java Virtual Machine. The syntax of Java is similar to c/c++.\n\nHistory: Java’s history is very interesting. It is a programming language created in 1991. James Gosling, Mike Sheridan, and Patrick Naughton, a team of Sun engineers known as the Green team initiated the Java language in 1991. Sun Microsystems released its first public implementation in 1996 as Java 1.0. It provides no-cost -run-times on popular platforms. Java1.0 compiler was re-written in Java by Arthur Van Hoff to strictly comply with its specifications. With the arrival of Java 2, new versions had multiple configurations built for different types of platforms.\n\nIn 1997, Sun Microsystems approached the ISO standards body and later formalized Java, but it soon withdrew from the process. At one time, Sun made most of its Java implementations available without charge, despite their proprietary software status. Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System.\n\nOn November 13, 2006, Sun released much of its Java virtual machine as free, open-source software. On May 8, 2007, Sun finished the process, making all of its JVM’s core code available under open-source distribution terms.\nThe principles for creating java were simple, robust, secured, high performance, portable, multi-threaded, interpreted, dynamic, etc. In 1995 Java was developed by James Gosling, who is known as the Father of Java. Currently, Java is used in mobile devices, internet programming, games, e-business, etc.\nAfter the name OAK, the team decided to give a new name to it and the suggested words were Silk, Jolt, revolutionary, DNA, dynamic, etc. These all names were easy to spell and fun to say, but they all wanted the name to reflect the essence of technology. In accordance with James Gosling, Java the among the top names along with Silk, and since java was a unique name so most of them preferred it.\nJava is the name of an island in Indonesia where the first coffee(named java coffee) was produced. And this name was chosen by James Gosling while having coffee near his office. Note that Java is just a name, not an acronym.Before learning Java, one must be familiar with these common terms of Java.\n1.  Java Virtual Machine(JVM):  This is generally referred to as JVM. There are three execution phases of a program. They are written, compile and run the program. Writing a program is done by a java programmer like you and me.\nThe compilation is done by the JAVAC compiler which is a primary Java compiler included in the Java development kit (JDK). It takes the Java program as input and generates bytecode as output.In the Running phase of a program, JVM executes the bytecode generated by the compiler.Now, we understood that the function of Java Virtual Machine is to execute the bytecode produced by the compiler. Every Operating System has a different JVM but the output they produce after the execution of bytecode is the same across all the operating systems. This is why Java is known as a platform-independent language.\n2. Bytecode in the Development process:  As discussed, the Javac compiler of JDK compiles the java source code into bytecode so that it can be executed by JVM. It is saved as .class file by the compiler. To view the bytecode, a disassembler like javap can be used.\n3. Java Development Kit(JDK): While we were using the term JDK when we learn about bytecode and JVM. So, as the name suggests, it is a complete Java development kit that includes everything including compiler, Java Runtime Environment (JRE), java debuggers, java docs, etc. For the program to execute in java, we need to install JDK on our computer in order to create, compile and run the java program.\n4. Java Runtime Environment (JRE): JDK includes JRE. JRE installation on our computers allows the java program to run, however, we cannot compile it. JRE includes a browser, JVM, applet supports, and plugins. For running the java program, a computer needs JRE.\n5. Garbage Collector: In Java, programmers can’t delete the objects. To delete or recollect that memory JVM has a program called Garbage Collector. Garbage Collectors can recollect the objects that are not referenced. So Java makes the life of a programmer easy by handling memory management. However, programmers should be careful about their code whether they are using objects that have been used for a long time. Because Garbage cannot recover the memory of objects being referenced.\n6. ClassPath: The classpath is the file path where the java runtime and Java compiler look for .class files to load. By default, JDK provides many libraries. If you want to include external libraries they should be added to the classpath.",
    "title": "Java",
    "subtitle": "Java is one of the most popular programming languages used today. "},
  {
    "id": 5,
    "background": "https://miro.medium.com/max/1200/1*cGzR28vmALhAAHXnqT5TSQ.png",
    "body": "Kotlin is a programming language that was released in 2011 by JetBrains, a company that sells integrated development environments (IDEs) for programming languages. Since then, it's become a favorite language for developers and replaced Java in many software projects. In this article, we'll look at why Kotlin became popular, its advantages, and what it's used for.\nKotlin's creation arose after Lead Developer Dmitry Jemerov sought features he couldn't find in Java. Scala, another language that runs on the Java Virtual Machine (JVM), was close to what he wanted, but it took too long to compile.\nJemerov wanted a language that had all the features of more modern programming languages, would run on the JVM, and would compile as fast as Java. So he created his own language, Kotlin.\nKotlin was designed as a replacement for Java on the Android operating system. Eight years after it was released, in 2019, Google finally agreed with Jemerov and most Android developers and announced that Kotlin was the preferred language for Android app development.\nHere are some reasons developers prefer Kotlin to Java:\n1)Kotlin is concise, saving time that you'd otherwise spend writing boilerplate code in Java.\n2)You can convert a Java file into a Kotlin file with just a script.\n3)Kotlin has no runtime overhead. Sometimes, adding features to a language means it has more overhead, which lowers its performance. Not so with Kotlin.\n4)Kotlin has a large community. If you ever get stuck, you can easily find other developers to help you on coding forums and social networks.\n5)Kotlin streamlines asynchronous programming. Making network and database calls asynchronously in Java is clumsy and painful. Kotlin has coroutines that make asynchronous programming simple and efficient.\n6)Kotlin handles nulls. A null in Java can crash a program if you haven't prepared for it. In Kotlin, you can add a simple operator to variables that may be null to prevent these crashes.\n7)Kotlin can run on multiple platforms. Kotlin can run anywhere Java runs, so you can use it to build cross-platform apps.\n8)It's easy to switch to Kotlin. Kotlin is fully compatible with Java, so you don't have to change all your code at once. You can slowly migrate an application to use Kotlin. ",
    "title": "Kotlin",
    "subtitle": "Kotlin is a general-purpose programming language originally developed and unveiled as Project Kotlin by JetBrains in 2011. The first version was officially released in 2016. It is interoperable with Java and supports functional programming languages."},
    {
    "id": 6,
    "background": "https://i.morioh.com/210310/015df247.webp",
    "body": "PHP is an open-source server-side scripting language that many devs use for web development. It is also a general-purpose language that you can use to make lots of projects, including Graphical User Interfaces (GUIs).\nIn this article, I will help you explore the world of PHP so you can learn how it works and its basic features. By the end, you will be able to write your first Hello World program in PHP.\nThe abbreviation PHP initially stood for Personal Homepage. But now it is a recursive acronym for Hypertext Preprocessor. (It's recursive in the sense that the first word itself is an abbreviation, so the full meaning doesn't follow the abbreviation.)\nThe first version of PHP was launched 26 years ago. Now it's on version 8, released in November 2020, but version 7 remains the most widely used.\nPHP runs on the Zend engine, which is the most popular implementation. There are some other implementations as well, like parrot, HPVM (Hip Hop Virtual Machine), and Hip Hop, created by Facebook.\nPHP is mostly used for making web servers. It runs on the browser and is also capable of running in the command line. So, if you don't feel like showing your code output in the browser, you can show it in the terminal.\nPHP has some advantages that have made it so popular, and it's been the go-to language for web servers for more than 15 years now. Here are some of PHP's benefits:\n1)Cross-Platform: PHP is platform-independent. You don't have to have a particular OS to use it because it runs on every platform, whether it's Mac, Windows, or Linux.\n2)Open Source: PHP is open source. The original code is made available to everyone who wants to build upon it. This is one of the reasons why one of its frameworks, Laravel, is so popular.\n3)Easy to learn: PHP is not hard to learn for absolute beginners. You can pick it up pretty if you already have programming knowledge.\n4)PHP syncs with all Databases: You can easily connect PHP to all Databases, relational and non-relational. So it can connect in no time to MySQL, Postgress, MongoDB, or any other database.\n5)Supportive Community: PHP has a very supportive online community. The official documentation provides guides on how to use the features and you can easily get your problem fixed while stuck.\nA number of established companies and tech giants use PHP to run their servers and make a lot of incredible things.\nFacebook: Facebook uses PHP to power its site. In turn, the company contributed to the community by creating an implementation known as Hip Hop for PHP.\nWikipedia: one of the world's largest sources of information on any topic, Wikipedia is built in PHP.\nContent Management Systems (CMSs): the world's most popular content management system, WordPress, is built in PHP. Other content management systems such as Drupal, Joomla, and Magento are also built in PHP. Shopify runs on PHP too.\nWeb Hosting Platforms: a lot of Web Hosting Platforms such as BlueHost, Site ground, and Whogohost run their hosting servers using PHP. ",
    "title": "PHP",
    "subtitle": "PHP is an open-source programming language created in 1990. Many web developers find it essential to learn PHP, as this language is used to build more than 80% of websites on the Internet, including notable sites like Facebook and Yahoo."},
    {
    "id": 7,
    "background": "https://i.morioh.com/200610/db881e6a.jpg",
    "body": "Of all the programming languages, C# is perhaps one of the best. This multi-paradigm language is versatile, fairly easy to learn and object-oriented. With so many different programming languages to choose from, we thought we’d give you a proper introduction to C# so you can decide if it’s the right fit for you and your next project.\n\nC# is a modern, general-purpose programming language that can be used to perform a wide range of tasks and objectives that span over a variety of professions. C# is primarily used on the Windows .NET framework, although it can be applied to an open source platform. This highly versatile programming language is an object-oriented programming language (OOP)—which isn’t very common—and fairly new to the game, yet already a reliable crowd pleaser.\n\nWhen compared to long-standing languages like Python and PHP, C# is a young addition to the programming family at nearly twenty years old. The language was developed in the year 2000 by Microsoft’s Anders Hejlsberg, a Danish software engineer with a history for popular creations. Anders has taken part in the creation of a handful of dependable programming tools and languages, including Microsoft’s TypeScript and Delphi, a suitable replacement for Turbo Pascal.\nAs of February 2019, C# ranked #4 on the PYPL PopularitY of Programming Language Index, right behind Java and JavaScript. The data used to compile this index is based on how often people search for a tutorial on different programming languages in Google.\n\nIn recent years, C# has also made a consistent appearance in the top ten programming languages in the TIOBE Index, a report that pulls its data from a compilation of popular search engines including Google, YouTube and Bing.\nIn the beginning, C# was originally titled COOL, a clever acronym that stood for “C-like Object Oriented Language.” Unfortunately, Microsoft was unable to hang onto the fun name for reasons having to do with trademark law.\n\nC# was originally designed to rival Java. Judging by the quick rise to popularity and the positive response from both new and seasoned developers, it’s safe to say that goal has been achieved.Within the range of beginners and expert developers, C# can be used by people with a wide and diverse scope of skill levels. To learn C#, it’s best that you have at least a basic understanding of writing code, even if you have yet to build your first program or application.\n\nThe learning curve for C# is relatively low when compared to more complex languages like Java, although it’s not quite as simple to learn as Python, the ultimate programming language for those who are brand new to the field.\n\nC# is a great choice for developers with moderate to advanced experience with writing code. While experts acknowledge the language for being one of moderate complexities, they agree that it’s fairly simple to grasp and excel in. Once you’re introduced to C# and you put in the time to get the hang of it, you can expect to advance quickly from rookie to expert.\n\nThis is due to the fact that C# is a high-level language, which means it’s relatively easy to read and write, making it a solid choice for beginners and a convenient option for experts. In addition to readability, C# can also be used to automate complex tasks that require a lot of time to achieve minor results.\n\nThis programming language is also statistically-typed, which means that errors are detected before the application goes live. This makes it a lot easier to detect small flaws in your stack that would otherwise be almost imperceptible—not to mention incredibly aggravating.\n\nWhile C# can be put to good use in the hands of all kinds of programmers, a large chunk of the language’s user base is comprised of those who are partial to the Microsoft platform. ",
    "title": "C#",
    "subtitle": "Developed by Microsoft, C# rose to fame in the 2000s for supporting the concepts of object-oriented programming. It is one of the most used programming languages for the .NET framework. Anders Hejlsberg, the creator of C#, says the language is more like C++ than Java."
      },
      {
    "id": 8,
    "background": "https://i.morioh.com/2019/12/09/591ee52bcdfa.jpg",
    "body": "Swift is a general-purpose, multi-paradigm, compiled programming language created for iOS, OS X, watchOS, tvOS and Linux developed by Apple Inc. Swift is designed to work with Apple's Cocoa and Cocoa Touch frameworks and the large body of existing Objective-C code written for Apple products. Swift is intended to be more resilient to erroneous code ('safer') than Objective-C and also more concise. It is built with the LLVM compiler framework included in Xcode 6 and later and uses the Objective-C runtime, which allows C, Objective-C, C++ and Swift code to run within a single program.\n\nSwift supports the core concepts that made Objective-C flexible, notably dynamic dispatch, widespread late binding, extensible programming and similar features. These features also have well known performance and safety trade-offs, which Swift was designed to address. For safety, Swift introduced a system that helps address common programming errors like null pointers, as well as introducing syntactic sugar to avoid the pyramid of doom that can result. For performance issues, Apple has invested considerable effort in aggressive optimization that can flatten out method calls and accessors to eliminate this overhead. More fundamentally, Swift has added the concept of protocol extensibility, an extensibility system that can be applied to types, structs and classes. Apple promotes this as a real change in programming paradigms they refer to as 'protocol-oriented programming'. \n\nDevelopment on Swift language was begun in July 2010 by Chris Lattner, with the eventual collaboration of many other programmers at Apple. Swift took language ideas 'from Objective-C,Rust, Haskell, Ruby, Python, C#, CLU, and far too many others to list'. On June 2, 2014, the Worldwide Developers Conference (WWDC) application became the first publicly released app written in Swift. A beta version of the programming language was released to registered Apple developers at the conference, but the company did not promise that the final version of Swift would be source-compatible with the test version. Apple planned to make source code converters available if needed for the full release.\n\nThe Swift Programming Language, a free 500-page manual, was also released at WWDC, and is available on the iBooks Store as well as the official website.\n\nSwift reached the 1.0 milestone on September 9, 2014, with the 'Gold Master' of Xcode 6.0 for iOS. Swift 1.1 was released on October 22, 2014, alongside the launch of Xcode 6.1.[24] Swift 1.2 was released on April 8, 2015, in conjunction with Xcode 6.3. Swift 2.0 was announced at WWDC 2015, and was made available for publishing apps in the App Store in September 21, 2015.[26] A Swift 3.0 roadmap was announced on the Swift blog on December 3, 2015. However, prior to that an intermediate Swift 2.2 version embracing new syntax and features has been introduced. This also shuns certain outdated components including Tuple splat syntax, C-style for loops and ++ and -- operators.\n\nSwift won first place for Most Loved Programming Language in the Stack Overflow Developer Survey 2015 and second place in 2016.\n\nGoogle is said to be considering using Swift as a First Class Language in its Android operating system.",
    "title": "Swift",
    "subtitle": "A few years ago, Swift made the top 10 in the monthly TIOBE Index ranking of popular programming languages. Apple developed Swift in 2014 for Linux and Mac applications. "
      },
      {
    "id": 9,
    "background": "https://miro.medium.com/max/1176/1*t06Twldot94d1nGG_kee1A.jpeg",
    "body": "R is a language and environment for statistical computing and graphics. It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT&T, now Lucent Technologies) by John Chambers and colleagues. R can be considered as a different implementation of S. There are some important differences, but much code written for S runs unaltered under R.\n\nR provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, clustering, …) and graphical techniques, and is highly extensible. The S language is often the vehicle of choice for research in statistical methodology, and R provides an Open Source route to participation in that activity.\n\nOne of R’s strengths is the ease with which well-designed publication-quality plots can be produced, including mathematical symbols and formulae where needed. Great care has been taken over the defaults for the minor design choices in graphics, but the user retains full control.\n\nR is available as Free Software under the terms of the Free Software Foundation’s GNU General Public License in source code form. It compiles and runs on a wide variety of UNIX platforms and similar systems (including FreeBSD and Linux), Windows and MacOS.\n\nR is an integrated suite of software facilities for data manipulation, calculation and graphical display. It includes\n-an effective data handling and storage facility,\n-a suite of operators for calculations on arrays, in particular matrices,\n-a large, coherent, integrated collection of intermediate tools for data analysis,\n-graphical facilities for data analysis and display either on-screen or on hardcopy, and\n-a well-developed, simple and effective programming language which includes conditionals, loops, user-defined recursive functions and input and output facilities.\n\nThe term “environment” is intended to characterize it as a fully planned and coherent system, rather than an incremental accretion of very specific and inflexible tools, as is frequently the case with other data analysis software.\n\nR, like S, is designed around a true computer language, and it allows users to add additional functionality by defining new functions. Much of the system is itself written in the R dialect of S, which makes it easy for users to follow the algorithmic choices made. For computationally-intensive tasks, C, C++ and Fortran code can be linked and called at run time. Advanced users can write C code to manipulate R objects directly.\n\nMany users think of R as a statistics system. We prefer to think of it as an environment within which statistical techniques are implemented. R can be extended (easily) via packages. There are about eight packages supplied with the R distribution and many more are available through the CRAN family of Internet sites covering a very wide range of modern statistics.\n\nR has its own LaTeX-like documentation format, which is used to supply comprehensive documentation, both on-line in a number of formats and in hardcopy. ",
    "title": "R",
    "subtitle": "R is an open-source language that is essentially a different version of the S language. Much of the code that developers write for S runs on R without modification. "
      },
      {
    "id": 10,
    "background": "https://media.geeksforgeeks.org/wp-content/uploads/20190925171314/ruby2.png",
    "body": "Ruby is a dynamic, open source, object oriented and reflective programming language. Ruby is considered similar to Perl and Smalltalk programming languages. It runs on all types of platforms like Windows, Mac OS and all versions of UNIX.\n\nIt is fully object oriented programming language. Everything is an object in Ruby. Each and every code has their properties and actions. Here properties refer to variables and actions refer to methods.\n\nRuby is considered to follow the principle of POLA (principle of least astonishment). It means that the language behaves in such a way to minimize the confusion for experienced users.\n\nRuby is designed and developed by Yukihiro 'Martz' Matsumoto in mid 1990s in Japan.\n\nPerl is a scripting language but comes under the category of Toy language. Python is not fully object oriented language. Ruby developer Yukihiro 'Martz' Matsumoto wanted a programming language which is completely object oriented and should be easy to use as a scripting language. He searched for this type of language, but couldn't find one. Hence, he developed one.\n\nThe name 'Ruby' originated during a chat session between Matsumoto and Keiju Ishitsuka. Two names were selected, 'oral' and 'Ruby'. Matsumoto chose the later one as it was the birthstone of one of his colleagues.\n\nThe first public release of Ruby 0.95 was announced on Japanese newspaper on December 21, 1995. Within next two days, three more versions were released.\nRuby was localized to Japan. To expand it, the Ruby-Talk, first English language Ruby mailing list was created.\nIn 2001, first Ruby book 'Programming Ruby' was published. After its publishment, learners of Ruby throughout the world increased.\nIn 2005, they released their first Ruby framework 'Ruby on Rails'. The framework release was a big success and the Ruby community increased incredibly.\nRuby 1.8.7 was released in May 2008. At this point, Ruby was at its peak so much that even Mac OS X began their shipping with built-in Ruby.\nThe current Ruby version 2.4.0 was released on Christmas in 2016. It has several new features like improvement to hash table, instance variable access, Array#max and Array#min.\nRuby is a great object oriented scripting programming language. Looking at its past we can say that it has a bright future if its community members continue expanding it beyond the thinking. ",
    "title": "Ruby",
    "subtitle": "If you want to start with a language that is known for being relatively simple to learn, consider Ruby. Developed in the 1990s, it was designed to have a more human-friendly syntax while still being flexible from the standpoint of its object-oriented architecture that supports procedural and functional programming notation."
      },
      {
    "id": 11,
    "background": "https://i.morioh.com/2022/07/23/5ad3a62c.webp",
    "body": "C is a structural or procedural oriented programming language which is machine-independent and extensively used in various applications.\n\nC is the basic programming language that can be used to develop from the operating systems (like Windows) to complex programs like Oracle database, Git, Python interpreter, and many more. C programming language can be called a god's programming language as it forms the base for other programming languages. If we know the C language, then we can easily learn other programming languages. C language was developed by the great computer scientist Dennis Ritchie at the Bell Laboratories. It contains some additional features that make it unique from other programming languages.\nC++ is a special-purpose programming language developed by Bjarne Stroustrup at Bell Labs circa 1980. C++ language is very similar to C language, and it is so compatible with C that it can run 99% of C programs without changing any source of code though C++ is an object-oriented programming language, so it is safer and well-structured programming language than C.\nDefinition\nC is a structural programming language, and it does not support classes and objects, while C++ is an object-oriented programming language that supports the concept of classes and objects.\n\nType of programming language\nC supports the structural programming language where the code is checked line by line, while C++ is an object-oriented programming language that supports the concept of classes and objects.\n\nDeveloper of the language\nDennis Ritchie developed C language at Bell Laboratories while Bjarne Stroustrup developed the C++ language at Bell Labs circa 1980.\n\nSubset\nC++ is a superset of C programming language. C++ can run 99% of C code but C language cannot run C++ code.\n\nType of approach\nC follows the top-down approach, while C++ follows the bottom-up approach. The top-down approach breaks the main modules into tasks; these tasks are broken into sub-tasks, and so on. The bottom-down approach develops the lower level modules first and then the next level modules.\n\nSecurity\nIn C, the data can be easily manipulated by the outsiders as it does not support the encapsulation and information hiding while C++ is a very secure language, i.e., no outsiders can manipulate its data as it supports both encapsulation and data hiding. In C language, functions and data are the free entities, and in C++ language, all the functions and data are encapsulated in the form of objects.\n\nFunction Overloading\nFunction overloading is a feature that allows you to have more than one function with the same name but varies in the parameters. C does not support the function overloading, while C++ supports the function overloading.\n\nFunction Overriding\nFunction overriding is a feature that provides the specific implementation to the function, which is already defined in the base class. C does not support the function overriding, while C++ supports the function overriding.\n\nReference variables\nC does not support the reference variables, while C++ supports the reference variables.\n\nKeywords\nC contains 32 keywords, and C++ supports 52 keywords.\n\nNamespace feature\nA namespace is a feature that groups the entities like classes, objects, and functions under some specific name. C does not contain the namespace feature, while C++ supports the namespace feature that avoids the name collisions.\n\nException handling\nC does not provide direct support to the exception handling; it needs to use functions that support exception handling. C++ provides direct support to exception handling by using a try-catch block.\n\nInput/Output functions\nIn C, scanf and printf functions are used for input and output operations, respectively, while in C++, cin and cout are used for input and output operations, respectively.\n\nMemory allocation and de-allocation\nC supports calloc() and malloc() functions for the memory allocation, and free() function for the memory de-allocation. C++ supports a new operator for the memory allocation and delete operator for the memory de-allocation.\n\nInheritance\nInheritance is a feature that allows the child class to reuse the properties of the parent class. C language does not support the inheritance while C++ supports the inheritance.\n\nHeader file\nC program uses <stdio.h> header file while C++ program uses <iostream.h> header file. ",
    "title": "C and C++",
    "subtitle": "C is probably the oldest and popular programming language and is the root of other programming languages such as C#, Java, and JavaScript. C++ is an enhanced version of C. Many developers today skip learning C on its own, while others think learning C first provides a valuable foundation for C++ development. Both languages are widely used in computer science and programming."
      },
      {
    "id": 12,
    "background": "https://1000logos.net/wp-content/uploads/2021/04/MATLAB-logo-500x281.png",
    "body": "MATLAB is an acronym for “ Matrix Laboratory”. This is because it was first created as a matrix programming language. Designed for engineers and scientists. But anyone who has an interest in this program or needs it can use it. Matlab is a well-known and fourth generation programming language, such as Java, C+. It is now used in advanced applications such as machine learning, deep learning and data science.\nMATLAB is a very important program that many engineering students and engineers must learn. It helps to perform mathematical calculation, design, analysis and optimization (structural and mathematical), as well as gives speed, accuracy and precision to results.\nIt was first developed by Cleve Moler, chair of the Computer Science Department at the University of New Mexico. Moler’s students had difficulty performing calculations of linear algebra and numerical analysis. Realizing this, Moler wanted to find an alternative way to make these calculations without having to use Fortran. In late 1984, Cleve Molar formed MathWorks with Steve Bangart and Jack Little. MathWorks released the first official version of Matlab in 1984.\nMATLAB is especially used in engineering applications. It is frequently used in systems analysis and mathematical calculations and their visualization.\n Main uses include:\n-Computations Of Numerical Linear Algebra\n-Machine learning\n-Deep learning\n-Data science\n-Simulation\n-Creating charts for Big Data\n-Data Analysis and visualization\n-Algorithm Development\n-Creating a graphical user interface and Application Programming Interface \nYou can apply and design different algorithms using MATLAB.\nYou can upload data from different sources, such as files, databases, or the internet, into MATLAB. At the same time, you can analyze them. Moreover, you can visualize them with various options.\nMATLAB has a very large library of mathematical functions. Thus, you can perform the computation of linear algebra and matrices as a mathematical product.\nYou can also simulate data models, prototypes, and products that you design or calculate with Matlab. You can also optimize them in order to use it effectively with other programs. You can design various self-specific interfaces.\nThe code you write uses the JIT alias just-in-Time compiler and makes the written code fast. Optimizes library calls, distributes mathematical processing tasks to the computer’s core. Thus, it solves more easily. Compared to Java, it is better to develop an algorithm in Matlab than in Java. Of course, that depends on what you do. It also helps you upload data from different sources. And it allows you to make the data visual.",
    "title": "Matlab",
    "subtitle": "Matlab is a proprietary programming language owned by MathWorks and originally released in the mid-1980s. It is built specifically for use by scientists and engineers. "
      },
      {
    "id": 13,
    "background": "https://cdn.thenewstack.io/media/2022/07/eb13f372-what-is-typescript_1980144365-e1659638901811.jpg",
    "body": "TypeScript is a programming language heavily built on top of JavaScript. But what makes TypeScript a language users can trust?\nLet’s dive deeper into what TypeScript is and what it can do for JavaScript users.\nTypeScript is a strongly typed, object-oriented, compiled programming language that builds on JavaScript. It is a superset of the JavaScript language, designed to give you better tooling at any scale.\n\nThe lead architect behind TypeScript is Anders Hejlsberg, designer of C# at Microsoft. TypeScript is open source, backed by Microsoft, and considered both a language and a set of tools.\n\nTypeScript calls itself “JavaScript with syntax for types.” In short, it is JavaScript with some additional features.\n\nTypeScript comprises three main components: Language, the TypeScript Compiler, and the TypeScript Language Service.\n\n1)Language: the syntax, keywords, and type annotations.\n2)The TypeScript Compiler (TSC): converts the instructions written in TypeScript to its JavaScript equivalent.\n3)The TypeScript Language Service: an additional layer of editor-like applications, such as statement completion, signature help, code formatting, and colorization, among other things.\n\nTypeScript is often considered “JavaScript and more.” More precisely, there are four main goals of TypeScript:\n1)Make JavaScript development more efficient\n2)Introduce optional types to JavaScript\n3)Help catch mistakes earlier\n4)Implement planned features of future JavaScript \n\nJavaScript is a loosely typed programming language developed by ECMA’s Technical Committee 39. In many ways, JavaScript is a universal language of the web, with multiple vendors supporting different implementations, e.g., Google, Microsoft, Oracle, etc.\n\nTo understand TypeScript’s relation to JavaScript, one must remember that JavaScript was originally introduced as the language for the client side. But with the development of Node.js, JavaScript is now also being identified as an emerging server-side technology.\n\nThis is where complications begin to arise.\n\nAs JavaScript grows, it is getting more complicated, making it difficult for users to keep things tidy as they maintain and reuse the code.\n\nBut this isn’t the only roadblock inhibiting JavaScript’s development as a server-side technology.\n\nBy neglecting new features like strong type checking, compile-time error checks, and object orientation, JavaScript is preventing itself from becoming a fully-fledged server-side technology — which it must become if it ever succeeds at the enterprise level.\n\nSeparately, JavaScript remains a loosely typed language, which can be inhibiting in and of itself. With function parameters and variables offering little to no information, developers are often left fumbling in the dark trying to determine what types of data are being passed where in JavaScript. They either have to waste time looking at the documentation or — in worst cases — simply do their best to guess based on the implementation.",
    "title": "TypeScript",
    "subtitle": "TypeScript is a newcomer to top programming language lists, but it’s making headway. It was developed in 2012 by Microsoft and is a typed version of JavaScript that is well suited for large code bases. TypeScript is used to create JavaScript-based projects with typing in both client-side and server-side development, making useful for catching errors and preventing systemic issues."
      },
      {
    "id": 14,
    "background": "https://i.morioh.com/201110/c0012c39.webp",
    "body": "Scala, short for Scalable Language, is a hybrid functional programming language. It was created by Martin Odersky. Scala smoothly integrates the features of object-oriented and functional languages. Scala is compiled to run on the Java Virtual Machine. Many existing companies, who depend on Java for business critical applications, are turning to Scala to boost their development productivity, applications scalability and overall reliability.\n\nHere we have presented a few points that makes Scala the first choice of application developers.\n\nHow TypeScript Fills in JavaScript’s Gaps\nAs a strongly typed programming language that builds on JavaScript, TypeScript’s mission is to step in and fill these gaps to enable application-scale development better.\n\nEnhanced IDE Support\nAs a whole, TypeScript greatly enhances the development experience for JavaScript users.\nIn many ways, this is largely due to the improved IDE (integrated development environment) support brought by TypeScript, where the TypeScript compiler informs the IDE on rich type information in real-time.\n\nThis facilitates several advantages for the user.\nFor one, it’s easier to catch errors. While coding, compilation errors are identified with a red line directly in the IDE. And when you have questions about what functions a library might offer, you can get inline help, thanks to code completion. This streamlines workflow, as you no longer need to stop and seek help from external, online references.\n\nTogether, this enhanced IDE support boosts overall user productivity.\n\nStatic Typing and Type Inference\nJavaScript is dynamically typed. In other words, until a variable is instantiated at runtime, JavaScript cannot know what type it is.\n\nBut in some scenarios, this may be too late. And if a variable is falsely assumed to be a certain type, this can cause significant bugs.\n\nThis is another area where TypeScript adds support for the loosely typed JavaScript.\n\nWith TLS (the TypeScript Language Service mentioned above), TypeScript has an optional static typing and type inference system that can infer undeclared variables. Thus, by adding type support to JavaScript, TypeScript can effectively mitigate type errors during compilation to JavaScript.\n\nCompilation\nAgain, one of the biggest drawbacks of JavaScript is that it is difficult to find and rectify errors.\n\nThis is partly due to the fact that JavaScript is an interpreted language and, thus, must be run to test that it’s valid. And in the case that there is an error, users are often left on a wild goose chase to find the bugs in the code.\n\nTypeScript helps make error checking easier.\nAs TypeScript compiles the code, it will identify syntax errors and notify users by generating compilation errors. Thus, TypeScript helps users catch bugs at the compile time instead of waiting until runtime. ",
    "title": "Scala",
    "subtitle": "Scala is a general-purpose, type-safe Java virtual machine language that combines the best oop and functional programming languages into one special high language. Scala is ideal for reducing and removing bugs in large, complex applications. It supports both object-oriented and functional programming."
      }
]